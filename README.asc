:toc:
:toc-placement!:

= Spring Data Redis + React • https://www.todobackend.com[Todo-Backend]

This project walks you through the process of using Spring Data Redis to
build a RESTful API that satisfies the simple web API spec set by the [https://www.todobackend.com]Todo-Backend project.

____
The Todo-Backend project defines a simple web API spec - for managing a todo list. Contributors https://www.todobackend.com/contribute.html[implement] that spec using various tech stacks. A https://www.todobackend.com/specs/index.html[spec runner] verifies that each contribution implements the exact same API, by running an automated test suite which https://github.com/TodoBackend/todo-backend-js-spec/blob/master/js/specs.js[defines] the API.

The Todo-Backend project was inspired by the http://todomvc.com/[TodoMVC project].
____

toc::[]

== What You Will build

You will build an application that uses `RedisTemplate` and the `@RedisHash`
annotation to provide a https://redis.io[Redis]-powered data layer for a Spring Boot API backend that satisfies the contract set out by the Todo-Backend project.

For the UI you will then craft a pure JS webapp following the specifications set by the http://todomvc.com/[TodoMVC project] and using the https://reactjs.org[React] JavaScript library for building user interfaces. The webapp can be found under
the `src/main/webapp` and it provides it's own https://github.com/redis-java/tut-spring-data-redis-react-todomvc/blob/main/src/main/webapp/README.asc[README].

image::https://github.com/tastejs/todomvc-app-css/raw/master/screenshot.png[TodoMVC App]

== What You Need

* http://www.oracle.com/technetwork/java/javase/downloads/index.html[JDK Java SE 11] or later
* http://maven.apache.org/download.cgi[Maven 3.2+]
* You can also import the code straight into your IDE:
** https://spring.io/guides/gs/sts[Spring Tool Suite (STS)]
** https://spring.io/guides/gs/intellij-idea/[IntelliJ IDEA]
- A Redis instance (See <<scratch>>)

[[scratch]]
== Setting up a Redis Instance

____
Redis • Real-time database for business-critical applications

Redis is open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams.
____

Before you can build the TodoBackend API, you need to set up the Redis instance that will host our data.
The server is freely available at https://redis.io/download.

There are many ways to get going with Redis but by far two easiest are:

* Redis Cloud Essentials: Get a free-for-life Redis instance with https://redislabs.com/try-free[Redis Cloud Essentials] from https://redislabs.com[Redis Labs], the home of Redis.
* Docker Hub: Pull a Docker image of Redis from Docker Hub.

====
[source,bash]
----
docker pull redis
----
====

Or can live like a Cro-magnon and download it manually, or, if you use a Mac, with Homebrew, by running the following
command in a terminal window:

====
[source,bash]
----
brew install redis
----
====

Once you unpack Redis, you can launch it with its default settings by running the following command:

====
[source,bash]
----
redis-server
----
====

You should see a message similar to the following:

====
[source,text]
----
81595:C 05 Jan 2021 11:06:39.999 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
81595:C 05 Jan 2021 11:06:39.999 # Redis version=6.0.9, bits=64, commit=00000000, modified=0, pid=81595, just started
81595:C 05 Jan 2021 11:06:39.999 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
81595:M 05 Jan 2021 11:06:40.000 * Increased maximum number of open files to 10032 (it was originally set to 256).
                _._
           _.-``__ ''-._
      _.-``    `.  `_.  ''-._           Redis 6.0.9 (00000000/0) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
 |    `-._   `._    /     _.-'    |     PID: 81595
  `-._    `-._  `-./  _.-'    _.-'
 |`-._`-._    `-.__.-'    _.-'_.-'|
 |    `-._`-._        _.-'_.-'    |           http://redis.io
  `-._    `-._`-.__.-'_.-'    _.-'
 |`-._`-._    `-.__.-'    _.-'_.-'|
 |    `-._`-._        _.-'_.-'    |
  `-._    `-._`-.__.-'_.-'    _.-'
      `-._    `-.__.-'    _.-'
          `-._        _.-'
              `-.__.-'

81595:M 05 Jan 2021 11:06:40.001 # Server initialized
81595:M 05 Jan 2021 11:06:40.002 * Ready to accept connections
----
====

== Entry point into the React App

We provide a Spring MVC controller that serves the HTML template hosting the React App. This controller
can we found at `src/main/java/com/redislabs/edu/todo/controllers/WebAppController.java`.

.src/main/java/com/redislabs/edu/todo/controllers/WebAppController.java
====
[source,java]
----
@Controller
public class WebAppController {
    @GetMapping
    public String index() {
        return "index";
    }
}
----

<1> `@Controller` marks this class as a Spring MVC controller.
<2> `@GetMapping` flags the `index()` method to serve GET request on the `/` route.
<3> It returns `index` as the name of the template, which Spring Boot's autoconfigured view resolver will map to `src/main/resources/templates/index.html`.
====

Learn more about the React App on its https://github.com/redis-java/tut-spring-data-redis-react-todomvc/blob/main/src/main/webapp/README.asc[README].

== Building and Launching the Application

You can now launch the app it either by running the `main()` method of `com.redislabs.edu.todo.TodoApplication` inside your IDE or by typing `./mvnw spring-boot:run` on the command line. (`mvnw.bat` for Windows users).

The output should show both the webapp (React) being bundled and the server-side (Spring Boot.. duh):

====
[source,text]
----
➜ ./mvnw clean spring-boot:run
[INFO] Scanning for projects...
[INFO]
[INFO] -------< com.redislabs.edu:tut-spring-data-redis-react-todomvc >--------
[INFO] Building Spring Data Redis + React.js Spring Boot Todo MVC Tutorial 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
...
[INFO] --- frontend-maven-plugin:1.11.0:install-node-and-npm (install node and npm) @ tut-spring-data-redis-react-todomvc ---
[INFO] Installing node version v14.15.3
...
[INFO] Installed node locally.
[INFO] Installing npm version 6.14.10
[INFO] Installed npm locally.
[INFO]
[INFO] --- frontend-maven-plugin:1.11.0:npm (npm install) @ tut-spring-data-redis-react-todomvc ---
[INFO] Running 'npm install' in ...
[INFO] audited 352 packages in 2.236s
[INFO] --- frontend-maven-plugin:1.11.0:webpack (webpack build) @ tut-spring-data-redis-react-todomvc ---
[INFO] Running 'webpack.js ' ...
[INFO] modules by path ./node_modules/ 1.11 MiB 31 modules
[INFO] modules by path ./src/ 18.8 KiB
[INFO]   modules by path ./src/components/*.js 7.65 KiB 5 modules
[INFO]   ./src/app.js 872 bytes [built] [code generated]
[INFO]   ./src/context/todos_context.js 4.05 KiB [built] [code generated]
[INFO]   ./src/services/todos_api.js 5.15 KiB [built] [code generated]
[INFO]   ./src/hooks/use_on_click_outside.js 1.05 KiB [built] [code generated]
[INFO] modules by path ./scss/*.scss 50 bytes (javascript) 9.33 KiB (css/mini-extract)
[INFO]   ./scss/app.scss 50 bytes [built] [code generated]
[INFO]   css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./scss/app.scss 9.33 KiB [code generated]
[INFO] webpack 5.11.1 compiled successfully in 3258 ms
...
[INFO] <<< spring-boot-maven-plugin:2.4.1:run (default-cli) < test-compile @ tut-spring-data-redis-react-todomvc <<<
[INFO]
[INFO]
[INFO] --- spring-boot-maven-plugin:2.4.1:run (default-cli) @ tut-spring-data-redis-react-todomvc ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.4.1)

2021-01-05 12:11:23.560  INFO 88152 --- [  restartedMain] com.redislabs.edu.todo.TodoApplication   : Starting TodoApplication using Java 11.0.9 on Your Box Baby with PID 88152 ...
...
2021-01-05 12:11:25.689  INFO 88152 --- [  restartedMain] com.redislabs.edu.todo.TodoApplication   : Started TodoApplication in 2.717 seconds (JVM running for 3.286)
----
====

== Play with the App

The Server-Side Endpoint is found at `http://localhost:8080/todos` and the
React webapp is mounted at the root `http://localhost:8080`. The Database is
preloaded with a few Beatles related Todos. Enjoy!

We've also embedded the server-side spec runner as a git submodule, to launch it simply open the following HTML file on your browser (Mac open command shown below):

====
[source,bash]
----
open ./js-spec/index.html?http://localhost:8080/todos
----
====

== See Also

The following guides from Spring.io may also be helpful:

* https://spring.io/guides/gs/spring-data-reactive-redis/[Accessing Data Reactively with Redis]
* https://spring.io/guides/gs/messaging-redis/[Messaging with Redis]
* https://spring.io/guides/gs/spring-boot/[Building an Application with Spring Boot]

=== Credit

Created by https://github.com/bsbodden[Brian Sam-Bodden] @ https://redislabs.com[Redis Labs]